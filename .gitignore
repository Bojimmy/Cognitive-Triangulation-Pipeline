# ================================================================
# Enhanced Cognitive Triangulation Pipeline - Git Ignore
# X-Agent System with Strategic LLM Integration
# ================================================================

# ============================================
# SECURITY & ENVIRONMENT
# ============================================
# Environment variables and API keys (CRITICAL!)
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# API keys and secrets
*.key
*.pem
*.p12
.secrets/
secrets.json

# ============================================
# COGNITIVE TRIANGULATION SPECIFIC
# ============================================

# Analysis databases and storage
*.db
*.sqlite
*.sqlite3
database.db
analysis_cache.db
memory_store.db

# LLM response cache and temp files
llm_cache/
.claude_cache/
semantic_analysis_cache/
architectural_insights_cache/
temp_analysis/

# Generated analysis reports
analysis_reports/
*.analysis.xml
*.analysis.json
pipeline_results/
cognitive_triangulation_output/

# Agent logs and debugging
agent_logs/
pipeline_logs/
*.agent.log
debug_*.log
performance_*.log

# Performance testing results
agent_performance_test/test_results.json
agent_performance_test/agent_comparison_results.json
performance_benchmarks/
test_output/

# Memory and vector storage
memory_db/
vector_store/
embeddings_cache/
.memory/

# Cost tracking and usage stats
cost_tracking.json
usage_stats.json
token_usage.log

# ============================================
# PYTHON SPECIFIC
# ============================================
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
cognitive_env/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# ============================================
# NODE.JS / REACT SPECIFIC
# ============================================

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Dependency directories
node_modules/
jspm_packages/

# Production builds
build/
dist/
out/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage
*.lcov
.nyc_output

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt

# Gatsby files
.cache/

# Serverless directories
.serverless/

# Parcel cache
.parcel-cache

# Vite build cache
.vite/

# ============================================
# AI/LLM INTEGRATION SPECIFIC
# ============================================

# Claude AI artifacts and sessions
claude.md
.claude/session-*
claude_responses/
anthropic_cache/

# OpenAI/GPT cache
openai_cache/
gpt_responses/

# LLM model downloads and cache
models/
.transformers_cache/
.sentence_transformers/
huggingface_cache/

# Vector embeddings
embeddings/
*.vectors
*.embeddings

# Neo4j database files (if running locally)
neo4j_data/
graph.db/
*.neo4j

# ============================================
# TESTING AND DEVELOPMENT
# ============================================

# Test outputs and temporary files
test_output/
test_results/
temp_test_files/
*.test.xml
*.test.json

# Performance benchmarks (keep framework, ignore results)
benchmarks/
performance_results/
*.benchmark

# Debug and development files
debug_output/
dev_logs/
*.debug
development_cache/

# Agent testing artifacts
agent_test_results/
mock_responses/
test_pipelines/

# Cognitive triangulation test outputs
cognitive_triangulation/test_output/
cognitive_triangulation/*.xml
cognitive_triangulation/temp_*

# ============================================
# IDE AND EDITOR FILES
# ============================================

# VSCode
.vscode/
*.code-workspace

# PyCharm/IntelliJ
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
\#*\#
.\#*

# Atom
.atom/

# ============================================
# OPERATING SYSTEM FILES
# ============================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
.AppleDouble
.LSOverride

# Windows
ehthumbs.db
Thumbs.db
Desktop.ini
$RECYCLE_BIN/

# Linux
*~
.directory
.Trash-*

# ============================================
# DEPLOYMENT AND PRODUCTION
# ============================================

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Kubernetes
*.k8s.yml
k8s-secrets/

# Cloud deployment
.gcp/
.aws/
.azure/

# Replit specific (if using Replit)
.replit
replit.nix
.upm/

# ============================================
# DOCUMENTATION AND MEDIA
# ============================================

# Large media files that shouldn't be in git
*.mp4
*.avi
*.mov
*.mkv
*.wmv
*.webm
*.mp3
*.wav
*.flac
*.ogg

# Large image files
*.psd
*.ai
*.eps
*.raw

# Temporary documentation
temp_docs/
draft_docs/
*.draft.md

# ============================================
# MISC
# ============================================

# Backup files
*.bak
*.backup
*.tmp
*.temp

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# Lock files (keep package-lock.json but ignore others)
*.lock
!package-lock.json

# Editor swap files
.*.sw?

# Patch files
*.patch
*.diff

# ============================================
# PROJECT SPECIFIC EXCEPTIONS
# ============================================

# Keep important config files
!domain_config.json
!requirements.txt
!package.json

# Keep essential documentation
!README.md
!LICENSE
!CHANGELOG.md

# Keep example files but ignore actual data
!example_*.py
!sample_*.json
!template_*.xml

# Keep agent templates and base classes
!agents/__init__.py
!agents/agent_template.py
!agents/README.md

# Keep cognitive triangulation framework but ignore test outputs
!cognitive_triangulation/README.md
!cognitive_triangulation/agents/
!cognitive_triangulation/test_*.py

# Keep performance testing framework but ignore results
!agent_performance_test/README.md
!agent_performance_test/*.py
!agent_performance_test/sample_code.py